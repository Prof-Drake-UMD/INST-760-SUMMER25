# -*- coding: utf-8 -*-
"""project_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vTu66Ndjgmb4HWLxjusyW-qLKx4B9ULU
"""

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# read csv file
df = pd.read_csv("mental_health_remote_workers.csv")

# display first five rows
df.head()

# specify category order
category_order = ["Poor", "Moderate", "Good"]

# create count plot
sns.countplot(x="Mental_Health_Status", data=df,
              order = category_order,
              hue = "Mental_Health_Status",
              hue_order = category_order,
              palette=["#e74c3c", "#f1c40f", "#2ecc71"],
              legend = False)

# cleaning up labels
plt.xlabel("Mental Health Status")
plt.ylabel("Count")

# save plot as image
plt.savefig("plot1.png", dpi=300, bbox_inches='tight')

# display count plot
plt.show()

# create scatterplot
g = sns.relplot(x = "Hours_Worked_Per_Week",
            y = "Burnout_Score",
            data = df,
            kind = "scatter",
            col = "Has_Access_To_Therapist")

# adding title and cleaning up labels
g.fig.suptitle("Burnout vs. Hours Worked, by Access to a Therapist (Among Remote Workers)",
               y = 1.04)
g.set(xlabel = "Hours Worked Per Week",
      ylabel = "Burnout Score")
g.set_titles("Has Access to Therapist: {col_name}")

# save plot as image
plt.savefig("plot2.png", dpi=300, bbox_inches='tight')

# display scatterplot
plt.show()

# create line plot
g = sns.relplot(x = "Hours_Worked_Per_Week", y = "Burnout_Score",
            data = df, kind = "line", errorbar = None)

# adding title and cleaning up labels
g.fig.suptitle("Relationship Between Work Hours and Burnout Among Remote Workers",
               y = 1.04)
g.set(xlabel = "Hours Worked Per Week",
      ylabel = "Burnout Score")

# save plot as image
plt.savefig("plot3.png", dpi=300, bbox_inches='tight')

# display line plot
plt.show()

# specify category order
category_order = ["Daily", "2-3x/Week", "Rarely", "Never"]

# set color palette (reversed)
sns.set_palette("PRGn_r")

# create bar plot
g = sns.catplot(x = "Exercise_Frequency", y = "Burnout_Score",
            hue = "Exercise_Frequency",
            data = df, kind = "bar", order = category_order,
            hue_order = category_order,
            legend = False)

# adding title and cleaning up labels
g.fig.suptitle("Relationship Between Exercise and Burnout Among Remote Workers",
               y = 1.04)
g.set(xlabel = "Exercise Frequency",
      ylabel = "Burnout Score")

# save plot as image
plt.savefig("plot4.png", dpi=300, bbox_inches='tight')

# display bar plot
plt.show()

# specify category order
category_order = ["Often", "Sometimes", "Never"]

# set color palette
sns.set_palette("PRGn")

# create bar plot
g = sns.catplot(x = "Internet_Issues_Frequency", y = "Productivity_Score",
            hue = "Internet_Issues_Frequency",
            data = df, kind = "bar", order = category_order,
            hue_order = category_order,
            legend = False)

# adding title and cleaning up labels
g.fig.suptitle("Relationship Between Internet Issues and Productivity for Remote Workers",
               y = 1.04)
g.set(xlabel = "Internet Issues Frequency",
      ylabel = "Productivity Score")

# save plot as image
plt.savefig("plot5.png", dpi=300, bbox_inches='tight')

# display bar plot
plt.show()