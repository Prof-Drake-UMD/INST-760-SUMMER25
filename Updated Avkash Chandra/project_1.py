# -*- coding: utf-8 -*-
"""Project 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/avkash10/project-1.d6250aa4-e7b7-4066-b2d5-b50233302592.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20250727/auto/storage/goog4_request%26X-Goog-Date%3D20250727T191141Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D3ddbd9436acd50e59974b4b861cb1c32a17390feb68a4625655522810505bb987768dcd3831aeaff0ff6e63f9a9cfa98a9f03a80c2ca3d91dbb866699f8eede3f9154a6fa264ad3b3ac32de07b6fb0c390a49678623ecfb1c2f50895764954a1c7e4eada960c09b527e7d432cdb43a3aec7fb0b3bd3fc24b71411d6ca41a6f778322e325c16e415d9dfc3b79b077ff285c3f96398dc4d0d8267a8baa6cc7fb178c69c41260e58d1dc385aae1e8c276bbf4e6b25579b21d9e5bd0d7ddc293c60a99a4d552e18c45f7534b16fc864fba0f7c3302100309a8a371e1118b8186a043dec5e4efc8266131afe0875786589c88030e11ef73c2522687d2bda4fc11e029
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.
import kagglehub
unsdsn_world_happiness_path = kagglehub.dataset_download('unsdsn/world-happiness')

print('Data source import complete.')

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All"
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

import pandas as pd

df = pd.read_csv('/kaggle/input/world-happiness/2019.csv')
print(df.head())

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the 2019 World Happiness data
df = pd.read_csv('/kaggle/input/world-happiness/2019.csv')

top10 = df.nlargest(10, 'Score')

plt.figure(figsize=(10,6))
sns.barplot(data=top10, x='Score', y='Country or region', palette='viridis')
plt.title('Top 10 Happiest Countries in 2019')
plt.xlabel('Happiness Score')
plt.ylabel('')
plt.tight_layout()
plt.savefig('top_10_happiest_countries.png')
plt.show()

"""Plot 1: This is focused on The Top 10 Happiest Countries in 2019.

This bar plot ranks countries by their happiness score, highlighting the nations with the highest levels of happiness in 2019.
"""

figsize=(10,6)
sns.scatterplot(data=df, x='GDP per capita', y='Score', hue='Score', palette='coolwarm', legend=False)
plt.title('GDP per Capita vs Happiness Score (2019)')
plt.xlabel('GDP per Capita')
plt.ylabel('Happiness Score')
plt.savefig('gdp_vs_happiness.png')

"""Plot 2: GDP per Capita vs Happiness Score

I chose a scatter plot showing the relationship between economic wealth (GDP per capita) and happiness score. The plot suggests that higher GDP per capita generally correlates with higher happiness.
"""

plt.figure(figsize=(8,6))
sns.boxplot(x=df['Score'], color='lightblue')
plt.title('Distribution of Happiness Scores (2019)')
plt.xlabel('Happiness Score')
plt.tight_layout()
plt.savefig('happiness_score_distribution.png')
plt.show()

"""Plot 3: Distribution of Happiness Scores

I chose a box plot to visualize the spread and variability of happiness scores among all countries, highlighting median values and potential outliers.
"""

plt.figure(figsize=(10,6))
sns.scatterplot(data=df, x='Social support', y='Score', hue='Score', palette='magma', legend=False)
plt.title('Social Support vs Happiness Score (2019)')
plt.xlabel('Social Support')
plt.ylabel('Happiness Score')
plt.tight_layout()
plt.savefig('social_support_vs_happiness.png')
plt.show()

"""Plot 4: Social Support vs Happiness Score

I also chose a scatter plot explores how perceived social support in a country correlates with happiness levels, showing a positive relationship.


"""

plt.figure(figsize=(10,8))
corr = df.select_dtypes(include=['float64', 'int64']).corr()
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f', square=True)
plt.title('Correlation Matrix of World Happiness Variables (2019)')
plt.tight_layout()
plt.savefig('correlation_heatmap.png')
plt.show()

"""Plot 5: Correlation Matrix of Key Variables

The heatmap displays the correlation coefficients between different variables in the dataset, helping identify which factors are most strongly related to happiness.
"""